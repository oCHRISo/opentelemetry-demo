load_module modules/ngx_otel_module.so;

events {
    worker_connections 1024;
}

http {
    otel_exporter {
        endpoint ${OTEL_COLLECTOR_HOST}:${OTEL_COLLECTOR_PORT_GRPC};
    }
    otel_trace on;
    otel_trace_context propagate;
    otel_service_name ${OTEL_SERVICE_NAME};
    otel_span_name collectorloadbalancer;

    server {
        listen ${OTEL_COLLECTOR_PORT_GRPC};
        http2 on;
        server_name _;

        location / {
            grpc_pass      grpc://collector_grpc;
            grpc_next_upstream     error timeout invalid_header http_500;
            grpc_connect_timeout   2;
            grpc_set_header        Host            $host;
            grpc_set_header        X-Real-IP       $remote_addr;
            grpc_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen ${OTEL_COLLECTOR_PORT_HTTP};
        server_name _;

        location / {
            proxy_pass      http://collector_http;
            proxy_redirect  off;
            proxy_next_upstream     error timeout invalid_header http_500;
            proxy_connect_timeout   2;
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # gRPC upstream
    upstream collector_grpc {
        server opentelemetry-demo-otelcol-1:4317;
        server opentelemetry-demo-otelcol-2:4317;
        server opentelemetry-demo-otelcol-3:4317;
    }

    # HTTP upstream
    upstream collector_http {
        server opentelemetry-demo-otelcol-1:4318;
        server opentelemetry-demo-otelcol-2:4318;
        server opentelemetry-demo-otelcol-3:4318;
    }
}
